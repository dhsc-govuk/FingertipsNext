openapi: 3.0.0
info:
  description: An API to query public health indicator data.
  version: 1.0.0
  title: Fingertips API
  contact:
    email: ProfileFeedback@dhsc.gov.uk
servers:
  - url: https://fingertips-next-api/1.0.0
    description: SwaggerHub API Auto Mocking
tags:
  - name: indicators
    description: Endpoints dealing with public health indicators
  - name: batches
    description: Endpoints dealing with batches of public health data that have been uploaded.
  - name: areas
    description: Endpoints dealing with areas / geography
  - name: system
    description: System endpoints
  - name: user
    description: Endpoints dealing with logged in users
paths:
  /healthcheck:
    get:
      tags:
        - system
      summary: API Health Check
      description: Returns the health status of the API.
      operationId: getHealthcheck
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Healthy
        '500':
          description: API is down
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Unhealthy
                  message:
                    type: string
                    example: API is experiencing issues
  /areas/hierarchies:
    get:
      tags:
        - areas
      summary: Get hierarchies
      description: Get all available hierarchy types
      operationId: getAreaHierarchies
      responses:
        '200':
          description: The available hierarchy types, e.g. NHS or Administrative
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /areas/areatypes:
    get:
      tags:
        - areas
      summary: Get area types
      description: Get area types, optionally filtering by hierarchy type
      operationId: getAreaTypes
      parameters:
        - $ref: '#/components/parameters/hierarchy_type'
      responses:
        '200':
          description: The available area types e.g. ICB, PCN or GP Surgery, together with related data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AreaType'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /areas/areatypes/{area_type_key}/areas:
    get:
      tags:
        - areas
      summary: Get member areas for an area type
      description: Get the areas that have a given area type
      operationId: getAreaTypeMembers
      parameters:
        - $ref: '#/components/parameters/area_type_key'
      responses:
        '200':
          description: The available areas for the area type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /areas/{area_code}:
    get:
      tags:
        - areas
      summary: Get single area
      description: Get the full details of a given area, including it's parents, optionally including it's children, siblings and cousins
      operationId: getArea
      parameters:
        - $ref: '#/components/parameters/area_code'
        - $ref: '#/components/parameters/include_children'
        - $ref: '#/components/parameters/include_siblings'
        - $ref: '#/components/parameters/child_area_type'
      responses:
        '200':
          description: The area node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaWithRelations'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /areas/root:
    get:
      tags:
        - areas
      summary: Get root
      description: Get the root node of the area hierarchy
      operationId: getAreaRoot
      responses:
        '200':
          description: The root area node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootArea'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /areas:
    get:
      tags:
        - areas
      summary: Get multiple areas
      description: Get the basic details without children, parent relationships etc. for 1 or more areas. Will return duplicate of areas that are applicable to multiple areaTypes.
      operationId: getAreas
      parameters:
        - $ref: '#/components/parameters/area_codes'
      responses:
        '200':
          description: A list of the basic area details for each of the requested area codes.
          content:
            application/json:
              schema:
                type: array
                maxItems: 300
                items:
                  $ref: '#/components/schemas/Area'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /indicators:
    get:
      tags:
        - indicators
      summary: Get indicator summaries & filter results
      operationId: filterIndicators
      description: |
        Get summaries of public health indicators, by passing in the appropriate options you can filter the results
      parameters:
        - $ref: '#/components/parameters/indicator_ids'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorSummary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /indicators/{indicator_id}:
    get:
      tags:
        - indicators
      summary: Get indicator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Indicator'
          description: The request was successful, and the server has returned the requested resource in the response body.
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - $ref: '#/components/parameters/indicator_id'
      description: |
        Fetches details of a specific indicator by its unique identifier. The response includes the indicator's metadata
      operationId: getIndicator
  /indicators/{indicator_id}/data:
    parameters:
      - $ref: '#/components/parameters/indicator_id'
    get:
      parameters:
        - $ref: '#/components/parameters/area_codes'
        - $ref: '#/components/parameters/area_type'
        - $ref: '#/components/parameters/ancestor_code'
        - $ref: '#/components/parameters/benchmark_ref_type'
        - $ref: '#/components/parameters/years'
        - $ref: '#/components/parameters/to_date'
        - $ref: '#/components/parameters/from_date'
        - $ref: '#/components/parameters/inequalities'
        - $ref: '#/components/parameters/latest_only'
      tags:
        - indicators
      summary: Get published health data for an indicator
      description: |-
        Get data for a public health indicator. This will return all published data for all requested areas and all time periods for the specified indicator.
        The returned data will include a benchmark comparison against either England or an ancestor area group, depending on the benchmark_ref_type and ancestor_code parameters.
        Data can be provided disagregated by various categories such as age and sex using the inequalities query parameter.
      responses:
        '200':
          description: Data containing the published health data points for the indicator, years and geographical areas requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorWithHealthDataForArea'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: getHealthDataForAnIndicator
    post:
      tags:
        - indicators
      summary: add a batch of new data for an indicator
      description: Creates new data for the indicator. The data is always created in an unpublished and unapproved state.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: The file has been accepted by the API and further processing will be conducted.
          content:
            text/plain:
              schema:
                type: string
                example: The file has been accepted.
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - indicators
      summary: delete a batch of unpublished data for an indicator
      description: Not Yet Implemented - Deletes ALL unpublished data for that indicator
      responses:
        '501':
          description: Not Implemented
          content:
            text/plain:
              schema:
                type: string
                example: Not Implemented
  /indicators/{indicator_id}/data/all:
    parameters:
      - $ref: '#/components/parameters/indicator_id'
      - $ref: '#/components/parameters/area_codes'
      - $ref: '#/components/parameters/area_type'
      - $ref: '#/components/parameters/ancestor_code'
      - $ref: '#/components/parameters/benchmark_ref_type'
      - $ref: '#/components/parameters/years'
      - $ref: '#/components/parameters/to_date'
      - $ref: '#/components/parameters/from_date'
      - $ref: '#/components/parameters/inequalities'
      - $ref: '#/components/parameters/latest_only'
    get:
      tags:
        - indicators
      summary: Get published and unpublished health data for an indicator
      description: |-
        Get data for a public health indicator. This will return all data for all requested areas and all time periods for the specified indicator.
        The returned data will include a benchmark comparison against either England or an ancestor area group, depending on the benchmark_ref_type and ancestor_code parameters.
        Data can be provided disaggregated by various categories such as age and sex using the inequalities query parameter.
      responses:
        '200':
          description: Data containing the published and unpublished health data points for the indicator, years and geographical areas requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorWithHealthDataForArea'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: getHealthDataForAnIndicatorIncludingUnpublishedData
  /indicators/quartiles:
    get:
      tags:
        - indicators
      summary: Get quartile values for indicators
      description: Get quartile information for many indicators for one area. This will calculate the quartile based on all areas of the specified type within either England or a sub-national area, depending on the benchmark_ref_type parameter. It will use the latest data available for the area group requested. If the indicator has data for more than one time period type then the API will return data for each data period type separately. The /all endpoint can return unpublished data, otherwise the data is published.
      parameters:
        - name: ancestor_code
          in: query
          style: simple
          schema:
            type: string
            example: E12000001
          explode: false
          description: The area code of an ancestor area
        - name: area_code
          in: query
          style: simple
          schema:
            type: string
            example: G82109
          explode: false
          description: The area code of the area/ geography
        - name: area_type
          in: query
          description: The area type which the areas belong to
          schema:
            type: string
        - name: indicator_ids
          in: query
          description: A list of indicator_ids, up to 10 can be requested
          style: form
          schema:
            type: array
            items:
              type: integer
              example: 1234
            maxItems: 10
        - name: benchmark_ref_type
          in: query
          description: The benchmark reference type
          schema:
            $ref: '#/components/schemas/BenchmarkReferenceType'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuartileData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /indicators/quartiles/all:
    get:
      tags:
        - indicators
      summary: Get quartile values for indicators
      description: Get quartile information for many indicators for one area. This will calculate the quartile based on all areas of the specified type within either England or a sub-national area, depending on the benchmark_ref_type parameter. It will use the latest data available for the area group requested. If the indicator has data for more than one time period type then the API will return data for each data period type separately. The /all endpoint can return unpublished data, otherwise the data is published.
      parameters:
        - name: ancestor_code
          in: query
          style: simple
          schema:
            type: string
            example: E12000001
          explode: false
          description: The area code of an ancestor area
        - name: area_code
          in: query
          style: simple
          schema:
            type: string
            example: G82109
          explode: false
          description: The area code of the area/ geography
        - name: area_type
          in: query
          description: The area type which the areas belong to
          schema:
            type: string
        - name: indicator_ids
          in: query
          description: A list of indicator_ids, up to 10 can be requested
          style: form
          schema:
            type: array
            items:
              type: integer
              example: 1234
            maxItems: 10
        - name: benchmark_ref_type
          in: query
          description: The benchmark reference type
          schema:
            $ref: '#/components/schemas/BenchmarkReferenceType'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuartileData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /batches:
    get:
      tags:
        - batches
      summary: Get all batches
      operationId: getBatches
      description: |
        Get details of all health data upload batches that are for indicators that you have permissions to modify.
      responses:
        '200':
          description: Batches for indicators you have permissions to modify.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Batch'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/info:
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Get User Info
      description: Get info for logged in user
      operationId: getUserInfo
      responses:
        '200':
          description: The information about the logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoType'
        '400':
          $ref: '#/components/responses/UserBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/indicator/{indicator_id}:
    head:
      parameters:
        - in: path
          name: indicator_id
          schema:
            type: integer
          required: true
          description: ID of the indicator to query against
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Check Indicator Permissions
      description: Queries against a specified indicator id. Return success if the user has administrative permission for the indicator. 403 if the user does not.
      operationId: checkIndicatorPermissions
      responses:
        '200':
          description: The user has administrator permissions for the specified indicator.
        '400':
          $ref: '#/components/responses/UserBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: The user does not have administration permissions for the specified indicator.
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    InternalServerError:
      description: The server encountered an unexpected condition that prevented it from fulfilling the request. Report the issue to the support team if it persists.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
    NotFound:
      description: The server cannot find the requested resource. The endpoint may be invalid or the resource may no longer exist.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
    BadRequest:
      description: The server could not understand the request due to invalid syntax. The client should modify the request and try again.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
          examples:
            Too many area_codes:
              value:
                message: Too many values supplied for parameter area_codes. The maximum is 300 but 301 supplied.
            Too many years:
              value:
                message: Too many values supplied for parameter years. The maximum is 20 but 21 supplied.
    UserBadRequest:
      description: User token was missing required claims.
    Unauthorized:
      description: Authorization information is missing or invalid.
  parameters:
    hierarchy_type:
      in: query
      name: hierarchy_type
      style: form
      schema:
        type: string
        example: NHS
      description: The name of the hierarchy type
    area_type_key:
      in: path
      name: area_type_key
      style: simple
      schema:
        type: string
        example: nhs-region
      explode: false
      required: true
      description: The area type key
    area_code:
      in: path
      name: area_code
      style: simple
      schema:
        type: string
        example: G82109
      explode: false
      required: true
      description: The area code of the area/ geography
    include_children:
      in: query
      name: include_children
      description: include the child areas
      schema:
        type: boolean
    include_siblings:
      in: query
      name: include_siblings
      description: include the sibling areas
      schema:
        type: boolean
    child_area_type:
      in: query
      name: child_area_type
      description: the area_type of descendants to be returned
      schema:
        type: string
    area_codes:
      in: query
      name: area_codes
      description: A list of area codes, up to 300 area codes can be requested
      style: form
      schema:
        type: array
        items:
          type: string
          example: G82109
        maxItems: 300
    indicator_ids:
      in: query
      name: indicator_ids
      description: A list of indicator_ids, up to 10 can be requested
      style: form
      schema:
        type: array
        items:
          type: integer
          example: 1234
        maxItems: 10
    indicator_id:
      in: path
      name: indicator_id
      style: simple
      schema:
        type: integer
        example: 1234
        minimum: 1
      explode: false
      required: true
      description: The unique identifier of the indicator
    area_type:
      in: query
      name: area_type
      description: The area type which the areas belong to
      schema:
        type: string
    ancestor_code:
      in: query
      name: ancestor_code
      description: An ancestor area which the area_codes belong to
      schema:
        type: string
        example: E38000205
    benchmark_ref_type:
      in: query
      name: benchmark_ref_type
      description: The benchmark reference type
      schema:
        $ref: '#/components/schemas/BenchmarkReferenceType'
    years:
      in: query
      name: years
      description: A list of years, up to 20 years can be requested
      style: form
      schema:
        type: array
        items:
          type: integer
          example: 2023
        maxItems: 20
    to_date:
      in: query
      name: to_date
      description: The latest date, in ISO 8601 format (YYYY-MM-DD), for which data should be returned, if not specified then the latest date for the indicator will be used.
      schema:
        type: string
        example: '2023-12-31'
    from_date:
      in: query
      name: from_date
      description: The earliest date, in ISO 8601 format (YYYY-MM-DD), for which data should be returned, if not specified then the earliest date for the indicator will be used.
      schema:
        type: string
        example: '2023-01-01'
    inequalities:
      in: query
      name: inequalities
      style: form
      schema:
        type: array
        items:
          type: string
          enum:
            - age
            - sex
            - deprivation
      description: Determines the kind of inequality data that should be returned if an option is specified
    latest_only:
      in: query
      name: latest_only
      description: Set to true to get data for the latest date period only, default is false. This overrides the years parameter if set to true.
      schema:
        type: boolean
  schemas:
    AreaType:
      title: Area Type
      type: object
      description: An area type e.g. PCN or GP
      required:
        - key
        - name
        - level
        - hierarchyName
      properties:
        key:
          type: string
          example: combined-authorities
          description: The key name of the area type
        name:
          type: string
          example: Combined Authorities
          description: The name of the area type for presentation
        level:
          type: integer
          example: '3'
          description: The level in the hierarchy
        hierarchyName:
          type: string
          example: NHS
          description: The name of the associated hierarchy for the area / geography
    Area:
      title: Area
      type: object
      description: An area or geography that has associated public health data
      required:
        - code
        - name
        - areaType
      properties:
        code:
          type: string
          example: E06000047
          description: The unique area code of the area / geography
        name:
          type: string
          example: County Durham
          description: The name of the area / geography
        areaType:
          $ref: '#/components/schemas/AreaType'
    AreaWithRelations:
      title: Area With Relations
      allOf:
        - $ref: '#/components/schemas/Area'
        - type: object
          properties:
            parents:
              type: array
              items:
                $ref: '#/components/schemas/Area'
            children:
              type: array
              items:
                $ref: '#/components/schemas/Area'
            siblings:
              type: array
              items:
                $ref: '#/components/schemas/Area'
    RootArea:
      title: Root Area
      type: object
      description: The root node of the area / geography hierarchies
      required:
        - code
        - name
      properties:
        code:
          type: string
          example: E92000001
          description: The unique area code of the area / geography
        name:
          type: string
          example: England
          description: The name of the area / geography
    IndicatorSummary:
      title: Indicator Summary
      type: object
      description: A summary of a public health indicator
      required:
        - indicator_id
        - title
      properties:
        indicator_id:
          type: integer
          format: int32
          example: 3456
          description: The unique identifier of the indicator
        title:
          type: string
          example: 'Hypertension: QOF prevalence (all ages)'
          description: The title of the indicator
    PeriodType:
      type: string
      example: Calendar
      description: a type of date period e.g. Calendar or Financial year.
      enum:
        - Academic
        - Calendar
        - Financial
        - FinancialMultiYear
        - FinancialYearEndPoint
        - Yearly
        - Unknown
      x-enum-varnames:
        - Academic
        - Calendar
        - Financial
        - FinancialMultiYear
        - FinancialYearEndPoint
        - Yearly
        - Unknown
    Indicator:
      title: Indicator
      type: object
      description: A public health indicator
      required:
        - indicator_id
        - title
        - definition
      properties:
        indicator_id:
          type: integer
          format: int32
          example: 3456
          description: The unique identifier of the indicator
        title:
          type: string
          example: 'Hypertension: QOF prevalence (all ages)'
          description: The title of the indicator
        definition:
          type: string
          example: The percentage of patients with established hypertension, as recorded on practice disease registers (proportion of total list size)
          description: The definition of the indicator
        period_types:
          type: array
          items:
            $ref: '#/components/schemas/PeriodType'
          description: The period types that the indicator holds data for
    BenchmarkReferenceType:
      title: Benchmark Reference Type
      type: string
      example: England
      description: benchmark reference type
      enum:
        - England
        - SubNational
      x-enum-varnames:
        - England
        - SubNational
    IndicatorPolarity:
      title: Indicator Polarity
      type: string
      enum:
        - Unknown
        - NoJudgement
        - LowIsGood
        - HighIsGood
      x-enum-varnames:
        - Unknown
        - NoJudgement
        - LowIsGood
        - HighIsGood
    BenchmarkComparisonMethod:
      title: Benchmark Comparison Method
      type: string
      example: CIOverlappingReferenceValue95
      description: the benchmark comparison method used
      enum:
        - Unknown
        - Quintiles
        - CIOverlappingReferenceValue95
        - CIOverlappingReferenceValue99_8
      x-enum-varnames:
        - Unknown
        - Quintiles
        - CIOverlappingReferenceValue95
        - CIOverlappingReferenceValue99_8
    SexData:
      title: Sex Data
      type: object
      description: Details of the sex category that this data point belongs to.
      required:
        - value
        - isAggregate
      properties:
        value:
          type: string
          example: Female
          description: Sex which the data are for.
        isAggregate:
          type: boolean
          example: false
          description: Indicates if the datapoint is an aggregated value for the sex dimension.
    Date:
      type: string
      format: date
      example: '2023-12-31'
      description: Date in ISO 8601 format (YYYY-MM-DD).
    DatePeriod:
      title: Date Period
      type: object
      description: A date period for a health data point.
      required:
        - type
        - from
        - to
      properties:
        type:
          $ref: '#/components/schemas/PeriodType'
          description: The type of date period, e.g. Calendar or Financial year.
        from:
          $ref: '#/components/schemas/Date'
          description: The start date for the data request, in ISO 8601 format (YYYY-MM-DD).
        to:
          $ref: '#/components/schemas/Date'
          description: The end date for the data request, in ISO 8601 format (YYYY-MM-DD).
    AgeData:
      title: Age Data
      type: object
      description: Details of the age band that this data point belongs to.
      required:
        - value
        - isAggregate
      properties:
        value:
          type: string
          example: 0-4
          description: Age band which the data are for.
        isAggregate:
          type: boolean
          example: false
          description: Indicates if the datapoint is an aggregated value for the age dimension.
    BenchmarkOutcome:
      title: Benchmark Outcome
      type: string
      example: Lower
      description: benchmark outcome
      enum:
        - NotCompared
        - Lowest
        - Lower
        - Low
        - Middle
        - High
        - Higher
        - Highest
        - Better
        - Best
        - Worse
        - Worst
        - Similar
      x-enum-varnames:
        - NotCompared
        - Lowest
        - Lower
        - Low
        - Middle
        - High
        - Higher
        - Highest
        - Better
        - Best
        - Worse
        - Worst
        - Similar
    DeprivationData:
      title: Deprivation Data
      type: object
      description: Details of the deprivation category that this data point belongs to.
      required:
        - sequence
        - value
        - type
        - isAggregate
      properties:
        sequence:
          type: number
          format: integer
          example: 2
          description: A number which represents this deprivation value's inherent place in the sequence of all values for this deprivation type. Can be used to show values ordered by their deprivation dimension.
        value:
          type: string
          example: Second most deprived decile
          description: The deprivation value for this data point.
        type:
          type: string
          example: District & UA deprivation deciles in England (IMD2019, 4/21 geography)
          description: The deprivation category that this data point's deprivation value belongs to.
        isAggregate:
          type: boolean
          example: false
          description: Indicates if the datapoint is an aggregated value for the deprivation dimension.
    HealthDataPoint:
      title: Health Data Point
      type: object
      description: Represents a health data point for a public health indicator with a count, value, upper confidence interval, lower confidence interval, year, age band and sex.
      required:
        - year
        - trend
        - sex
        - ageBand
        - deprivation
      properties:
        year:
          type: integer
          format: int32
          example: 2023
          description: The year that the data point is for
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
        count:
          type: number
          example: 222
          description: The count
        value:
          type: number
          example: 506.60912
          description: The value
        lowerCi:
          type: number
          example: 441.69151
          description: The lower confidence interval
        upperCi:
          type: number
          format: float
          example: 578.32766
          description: The upper confidence interval
        ageBand:
          $ref: '#/components/schemas/AgeData'
        sex:
          $ref: '#/components/schemas/SexData'
          deprecated: true
        trend:
          type: string
          example: Increasing
          description: The statistical trend that applies to the data point, given the preceding data. Will only be calculated if there are at least 5 data points to use.
          enum:
            - Not yet calculated
            - Cannot be calculated
            - Increasing
            - Decreasing
            - No significant change
            - Increasing and getting better
            - Increasing and getting worse
            - Decreasing and getting better
            - Decreasing and getting worse
        isAggregate:
          type: boolean
          description: Indicates if the datapoint is an aggregate point.
        benchmarkComparison:
          type: object
          properties:
            outcome:
              $ref: '#/components/schemas/BenchmarkOutcome'
            benchmarkAreaCode:
              type: string
              example: E92000001
              description: The code of the benchmark area
            benchmarkAreaName:
              type: string
              example: England
              description: The name of the benchmark area
            benchmarkValue:
              type: number
              example: 123.5
              description: The value used in the comparison
        deprivation:
          $ref: '#/components/schemas/DeprivationData'
    IndicatorSegment:
      title: IndicatorSegment
      type: object
      description: Represents a segment of an Indicator health data point for a public health indicator .
      required:
        - sex
      properties:
        sex:
          $ref: '#/components/schemas/SexData'
        isAggregate:
          type: boolean
          description: Indicates if the segment is the aggregate
        healthData:
          type: array
          items:
            $ref: '#/components/schemas/HealthDataPoint'
          description: The health data points for the area and indicator
    HealthDataForArea:
      title: Health Data For Area
      type: object
      description: Associates a list of health data points with the relevant geographical area (represented by it's unique code).
      required:
        - areaCode
        - areaName
        - healthData
      properties:
        areaCode:
          type: string
          example: E92000001
          description: The unique area code that the health data are for
        areaName:
          type: string
          example: England
          description: The name of the area that the health data are for
        indicatorSegments:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorSegment'
          description: An array of indicator segments
        healthData:
          type: array
          items:
            $ref: '#/components/schemas/HealthDataPoint'
          description: The health data points for the area and indicator
          deprecated: true
    IndicatorWithHealthDataForArea:
      title: Indicator With Health Data For Area
      type: object
      description: Indicator information with area health data
      properties:
        indicatorId:
          type: integer
          example: 21404
          description: Unique ID of the indicator
        name:
          type: string
          example: Emergency readmissions within 30 days of discharge from hospital
          description: Name of the indicator
        polarity:
          $ref: '#/components/schemas/IndicatorPolarity'
        benchmarkMethod:
          $ref: '#/components/schemas/BenchmarkComparisonMethod'
        areaHealthData:
          type: array
          items:
            $ref: '#/components/schemas/HealthDataForArea'
    QuartileData:
      title: Quartile Data
      type: object
      description: Quartile data for an indicator plus supporting information
      properties:
        indicatorId:
          type: integer
          example: 21404
          description: Unique ID of the indicator
        sex:
          $ref: '#/components/schemas/SexData'
        isAggregate:
          type: boolean
          description: Indicates if the segment is the aggregate
        year:
          type: integer
          format: int32
          example: 2023
          description: The year that the data point is for
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
          description: The date period that the data point is for.
        polarity:
          $ref: '#/components/schemas/IndicatorPolarity'
        q0Value:
          type: number
          description: Quartile Q0 value - the minimum value
        q1Value:
          type: number
          description: Quartile Q1 value - the lower quartile value
        q2Value:
          type: number
          description: Quartile Q2 value - the median value
        q3Value:
          type: number
          description: Quartile Q3 value - the upper quartile value
        q4Value:
          type: number
          description: Quartile Q4 value - the maximum value
        areaValue:
          type: number
          description: the average value for the area requested for comparison
        ancestorValue:
          type: number
          description: the average value for the ancestor area requested for comparison
        englandValue:
          type: number
          description: the average value for England for comparison
    Batch:
      title: Batch details
      type: object
      description: Details of a health data upload batch.
      required:
        - batchId
        - indicatorId
        - originalFilename
        - createdAt
        - publishedAt
        - userId
        - status
      properties:
        batchId:
          type: string
          example: 41101_2025-03-07T14:22:37.123
          description: The unique identifier of the batch.
        indicatorId:
          type: integer
          example: 21404
          description: Unique ID of the indicator
        originalFilename:
          type: string
          description: The name of the file originally uploaded in order to create the batch.
          example: upload.csv
        createdAt:
          type: string
          format: date-time
          description: When the batch was created.
          example: '2025-06-30T14:44:53.643Z'
        publishedAt:
          type: string
          format: date-time
          description: When the data in the batch will be published.
          example: '2025-07-30T00:00:00.000Z'
        userId:
          type: string
          format: guid
          description: The ID of the user who uploaded the batch.
          example: e14dae4e-4c3c-4e13-979a-4aa6566e06a7
        status:
          type: string
          description: The current status of the batch.
          enum:
            - Received
            - Deleted
          x-enum-varnames:
            - Received
            - Deleted
          example: Received
    UserInfoType:
      title: User Info Type
      type: object
      description: Representation of the currently logged in user
      required:
        - externalId
      properties:
        externalId:
          type: string
          example: ABC123
          description: An ID to uniquely identify the user. Currently mapped to the NameIdentifier claim within the JWT.
