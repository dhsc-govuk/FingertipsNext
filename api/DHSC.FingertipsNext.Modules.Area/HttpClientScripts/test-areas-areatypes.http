
### check GET all area types

GET http://localhost:5144/areas/areatypes

> {%
    client.test("Expected area types returned", function (callbackfn, thisArg) {
        const expected = [
            "Counties & UAs",
            "Country",
            "GP",
            "ICB",
            "NHS region",
            "PCN",
            "Regions Statistical"
        ];
        client.assert(response.status === 200, "Response status is not 200");
        
        let returnedTypes = response.body
        client.assert(returnedTypes.length === expected.length);
        returnedTypes.forEach(r => client.assert(expected.find(e => e === r) != null))
    });
%}

### check GET NHS area types

GET http://localhost:5144/areas/areatypes?hierarchy_type=NHS

> {%
    client.test("Expected NHS area types returned", function (callbackfn, thisArg) {
        const expected = [
            "GP",
            "ICB",
            "NHS region",
            "PCN"
        ];
        client.assert(response.status === 200, "Response status is not 200");

        let returnedTypes = response.body
        client.assert(returnedTypes.length === expected.length);
        returnedTypes.forEach(r => client.assert(expected.find(e => e === r) != null))
    });
%}

### check GET filtered area types 'ALL'

GET http://localhost:5144/areas/areatypes?hierarchy_type=All

> {%
    client.test("Expected 'all hierarchies' area types returned", function (callbackfn, thisArg) {
        const expected = [
            "Counties & UAs",
            "Country",
            "GP",
            "ICB",
            "NHS region",
            "PCN",
            "Regions Statistical"
        ];
        client.assert(response.status === 200, "Response status is not 200");

        let returnedTypes = response.body
        client.assert(returnedTypes.length === expected.length);
        returnedTypes.forEach(r => client.assert(expected.find(e => e === r) != null))
    });
%}

###