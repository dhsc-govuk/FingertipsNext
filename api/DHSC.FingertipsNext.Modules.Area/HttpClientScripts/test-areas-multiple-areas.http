### check get multiple areas returns the list of area details for the requested area codes.

# North East Region and Yorkshire and the Humber Region
GET http://localhost:5144/pigeons?area_codes=E12000001&area_codes=E12000003

> {%
    const expected = require ('./test-areas-multiple-areas-response.json');

    client.test("Expected areas returned in response", function (callbackfn, thisArg) {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.length === expected.length, "Receieved unexpected number of areas");

        // Cannot guarantee order in which areas are returned, hence the assertion approach
        client.assert(JSON.stringify(response.body).length === JSON.stringify(expected).length, "Received unexpected response");
        client.assert((response.body[0].name === "North East Region" || response.body[0].name === "Yorkshire and the Humber Region"), "Received unexpected area");
        client.assert((response.body[1].name === "North East Region" || response.body[1].name === "Yorkshire and the Humber Region"), "Received unexpected area");
    });
%}

### check endpoint returns validation error if no area codes provided.
GET http://localhost:5144/areas

> {%
    const expected = {
        "message": "Please provide at least one value for the parameter area_codes"
    }

    client.test("Expected validation error received", function (callbackfn, thisArg) {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Received unexpected validation error message");
    });
%}

### check endpoint returns a not found error for an area code which does not exist.
GET http://localhost:5144/areas?area_codes=narnia

> {%
    client.test("Expected not found error received", function (callbackfn, thisArg) {
        client.assert(response.status === 404, "Response status is not 404");
    });
%}

###
