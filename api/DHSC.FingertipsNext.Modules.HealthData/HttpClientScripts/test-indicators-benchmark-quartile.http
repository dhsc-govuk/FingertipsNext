### Basic Quartile generation
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&area_group=U79121

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 15.7894736842105,
            "q1Value": 64.9253731343284,
            "q2Value": 71.830985915493,
            "q3Value": 76.9005847953216,
            "q4Value": 88.6435331230284,
            "areaValue": 76.1904761904762,
            "groupValue": 76.4550264550265,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile generation benchmark against AreaGroup
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&area_group=U79121&benchmark_ref_type=AreaGroup

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 70.0729927007299,
            "q1Value": 73.8372093023256,
            "q2Value": 76.1904761904762,
            "q3Value": 79.0476190476191,
            "q4Value": 80.1242236024845,
            "areaValue": 76.1904761904762,
            "groupValue": 76.4550264550265,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check quartile calculation for two indicators
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&indicator_ids=90453&area_code=N85008&area_type=gps&area_group=U79121

> {%
    client.test("Calculate Quartile for two indicators", function (callbackfn, thisArg) {
        const expected = [
        {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 15.7894736842105,
            "q1Value": 64.9253731343284,
            "q2Value": 71.830985915493,
            "q3Value": 76.9005847953216,
            "q4Value": 88.6435331230284,
            "areaValue": 76.1904761904762,
            "groupValue": 76.4550264550265,
            "englandValue": 69.8972433785404
        },
        {
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": 2024,
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": 28.93029,
            "groupValue": 29.8274473053626,
            "englandValue": 27.15399
        }
        ];
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}
### check quartile calculation for two indicators Benchamrk against AreaGroup
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&indicator_ids=90453&area_code=N85008&area_type=gps&area_group=U79121&benchmark_ref_type=AreaGroup
> {%
    client.test("Calculate Quartile for two indicators", function (callbackfn, thisArg) {
        const expected = [
            {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 70.0729927007299,
            "q1Value": 73.8372093023256,
            "q2Value": 76.1904761904762,
            "q3Value": 79.0476190476191,
            "q4Value": 80.1242236024845,
            "areaValue": 76.1904761904762,
            "groupValue": 76.4550264550265,
            "englandValue": 69.8972433785404
        },
        {
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": 2024,
            "q0Value": 26.36997,
            "q1Value": 26.53913,
            "q2Value": 27.07651,
            "q3Value": 28.93029,
            "q4Value": 35.47526,
            "areaValue": 28.93029,
            "groupValue": 29.8274473053626,
            "englandValue": 27.15399
        }
        ];
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}
### check Quartile comparison where area group has no data and returns null
GET http://localhost:5144/indicators/quartiles?indicator_ids=241&area_code=N85008&area_type=gps&area_group=U79121

> {%
    client.test("Expected health data returned with rag comparison", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 241,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 0.51393,
            "q1Value": 6.94186,
            "q2Value": 8.06184,
            "q3Value": 9.1663,
            "q4Value": 17.51457,
            "areaValue": 7.27034,
            "groupValue": null,
            "englandValue": 7.65539435016159
  }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}


### check Quartile comparison where indicator is unknown
GET http://localhost:5144/indicators/quartiles?indicator_ids=999999&area_code=N85008&area_type=gps&area_group=U79121

> {%
    client.test("check Quartile comparison where indicator is unknown", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 999999,
            "polarity": null,
            "year": null,
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": null,
            "groupValue": null,
            "englandValue": null
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area group is undefined
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_code=N85008&area_type=gps

> {%
    client.test("check Quartile comparison where area group is undefined", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": 2024,
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": 28.93029,
            "groupValue": null,
            "englandValue": 27.15399

        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_code is undefined
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_type=gps

> {%
    client.test("check Quartile comparison where area_code is undefined", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": 2024,
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": null,
            "groupValue": null,
            "englandValue": 27.15399
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_type is erroneous
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_type=erroneous_area_type

> {%
    client.test("check Quartile comparison where area_type is erroneous", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": null,
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": null,
            "groupValue": null,
            "englandValue": 27.15399
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_type is missing
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453

> {%
    client.test("check Quartile comparison where area_type is missing", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter area_type must be supplied."
            }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where indicator_ids is missing
GET http://localhost:5144/indicators/quartiles

> {%
    client.test("check Quartile comparison where indicator_ids is missing", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter indicator_ids must be supplied."
        }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison for county
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=counties-and-unitary-authorities
> {%
    client.test("check Quartile comparison for county", function (callbackfn, thisArg) {
        const expected = [  {
            "indicatorId": 94103,
            "polarity": "LowIsGood",
            "year": 2019,
            "q0Value": 20.76935,
            "q1Value": 24.72157,
            "q2Value": 25.99248,
            "q3Value": 27.44265,
            "q4Value": 29.42533,
            "areaValue": 20.76935,
            "groupValue": null,
            "englandValue": 25.80061
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison for district - same area as above - different result!
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=districts-and-unitary-authorities
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 94103,
            "polarity": "LowIsGood",
            "year": 2019,
            "q0Value": 20.76935,
            "q1Value": 24.79926,
            "q2Value": 26.05024,
            "q3Value": 27.5906,
            "q4Value": 29.42533,
            "areaValue": 20.76935,
            "groupValue": null,
            "englandValue": 25.80061
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison when benmchmrk_ref_type is AreaGroup and AreaGroup is not supplied
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=districts-and-unitary-authorities&benchmark_ref_type=AreaGroup
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter area_group must be supplied if benchmark_ref_type is set to AreaGroup."
        }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison against Fingertips - https://fingertips.phe.org.uk/profile/dementia/data#page/1
GET http://localhost:5144/indicators/quartiles?indicator_ids=91894&area_code=E54000028&area_type=nhs-integrated-care-boards&area_group=E40000003
> {%
    client.test("check Quartile comparison for NHS Integrated Care Boards Place of death: Dementia", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 91894,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 17.03,
            "q1Value": 21.08,
            "q2Value": 26.23,
            "q3Value": 29.69,
            "q4Value": 39.48,
            "areaValue": 34.98,
            "groupValue": 36.664729808251,
            "englandValue": 26.26
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison against Fingertips - https://fingertips.phe.org.uk/profile/tobacco-control/data#page/1/gid/1938132885/ati/502/iid/92443/age/168/sex/4/cat/-1/ctp/-1/yrr/1/cid/4/tbm/1
GET http://localhost:5144/indicators/quartiles?indicator_ids=93085&area_code=E09000002&area_type=counties-and-unitary-authorities
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 93085,
            "polarity": "LowIsGood",
            "year": 2023,
            "q0Value": 2.8,
            "q1Value": 5.3,
            "q2Value": 7.5,
            "q3Value": 9.1,
            "q4Value": 17.5,
            "areaValue": 3.7,
            "groupValue": null,
            "englandValue": 7.4

        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison when there is insufficient data
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_code=D83060&area_type=gps&area_group=U10430&benchmark_ref_type=AreaGroup
> {%
    client.test("check Quartile comparison when there is in sufficient data", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "year": 2024,
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": 28.32882,
            "groupValue": 26.7614436271931,
            "englandValue": 27.15399
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile GP benchmarked against ICB-Sub 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&area_group=E38000208&benchmark_ref_type=AreaGroup

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [  {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 62.0320855614973,
            "q1Value": 70.4697986577181,
            "q2Value": 74.9244712990937,
            "q3Value": 79.0476190476191,
            "q4Value": 84.5161290322581,
            "areaValue": 76.1904761904762,
            "groupValue": 72.5713600383785,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against ICB 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&area_group=E54000008&benchmark_ref_type=AreaGroup

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [   {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 66.2418790604698,
            "q1Value": 69.4552026852569,
            "q2Value": 73.1362196409715,
            "q3Value": 74.0236686390533,
            "q4Value": 76.360153256705,
            "areaValue": 72.5713600383785,
            "groupValue": 72.0120548814339,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against NHS Region 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&area_group=E40000010&benchmark_ref_type=AreaGroup

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [   {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 59.2343247588424,
            "q1Value": 68.9508793208005,
            "q2Value": 72.5664968873797,
            "q3Value": 73.97989355411,
            "q4Value": 76.360153256705,
            "areaValue": 72.5713600383785,
            "groupValue": 70.7067909967071,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against England 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&area_group=E40000010

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [     {
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 54.5377677564825,
            "q1Value": 68.1444014678171,
            "q2Value": 71.9129438717068,
            "q3Value": 74.0390187367201,
            "q4Value": 80.8172397550636,
            "areaValue": 72.5713600383785,
            "groupValue": 70.7067909967071,
            "englandValue": 69.8972433785404
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile District benchmarked against County 
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&area_group=E10000032&benchmark_ref_type=AreaGroup


> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 4.48617,
            "q1Value": 4.53989,
            "q2Value": 4.83127,
            "q3Value": 4.91231,
            "q4Value": 5.13148,
            "areaValue": 4.91231,
            "groupValue": 4.75958,
            "englandValue": 5.2205
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });

### Basic Quartile District benchmarked against Region
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&area_group=E12000008&benchmark_ref_type=AreaGroup


> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 4.25991,
            "q1Value": 4.76673,
            "q2Value": 4.92386,
            "q3Value": 5.29198,
            "q4Value": 5.83444,
            "areaValue": 4.91231,
            "groupValue": 5.05386,
            "englandValue": 5.2205
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile District benchmarked against England
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&area_group=E12000008
> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [  {
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "year": 2023,
            "q0Value": 3.26941,
            "q1Value": 4.75739,
            "q2Value": 5.21437,
            "q3Value": 5.56829,
            "q4Value": 7.36706,
            "areaValue": 4.91231,
            "groupValue": 5.05386,
            "englandValue": 5.2205
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}