### Basic Quartile generation
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&ancestor_code=U79121
> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected =
        [
            {
                "age": {
                    "value": "53-70 yrs",
                    "isAggregate": true
                },
                "sex": {
                    "value": "Female",
                    "isAggregate": true
                },
                "reportingPeriod": "Yearly",
                "isAggregate": true,
                "year": 2023,
                "datePeriod": {
                    "type": "Financial",
                    "from": "2023-04-01",
                    "to": "2024-03-31"
                },
                "q0Value": 15.7894736842105,
                "q1Value": 64.9253731343284,
                "q2Value": 71.830985915493,
                "q3Value": 76.9005847953216,
                "q4Value": 88.6435331230284,
                "areaValue": 76.1904761904762,
                "ancestorValue": 76.4550264550265,
                "englandValue": 69.8972433785404,
                "indicatorId": 94063,
                "polarity": "NoJudgement",
                "frequency": "Annually"
            }
        ]         
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile generation benchmark against AreaGroup
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&ancestor_code=U79121&benchmark_ref_type=SubNational

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
            {
                "age": {
                    "value": "53-70 yrs",
                    "isAggregate": true
                },
                "sex": {
                    "value": "Female",
                    "isAggregate": true
                },
                "reportingPeriod": "Yearly",
                "isAggregate": true,
                "year": 2023,
                "datePeriod": {
                "type": "Financial",
                "from": "2023-04-01",
                "to": "2024-03-31"
                },
                "q0Value": 70.0729927007299,
                "q1Value": 73.8372093023256,
                "q2Value": 76.1904761904762,
                "q3Value": 79.0476190476191,
                "q4Value": 80.1242236024845,
                "areaValue": 76.1904761904762,
                "ancestorValue": 76.4550264550265,
                "englandValue": 69.8972433785404,
                "indicatorId": 94063,
                "polarity": "NoJudgement",
                "frequency": "Annually"
            }]

        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check quartile calculation for two indicators
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&indicator_ids=90453&area_code=N85008&area_type=gps&ancestor_code=U79121

> {%
    client.test("Calculate Quartile for two indicators", function (callbackfn, thisArg) {
        const expected = [
         {
            "age": {
                "value": "16+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2024,
            "datePeriod": {
              "type": "Calendar",
              "from": "2024-01-01",
              "to": "2024-12-31"
            },
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": 28.93029,
            "ancestorValue": 29.8274473053626,
            "englandValue": 27.15399,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        },
        {
            "age": {
                "value": "53-70 yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 15.7894736842105,
            "q1Value": 64.9253731343284,
            "q2Value": 71.830985915493,
            "q3Value": 76.9005847953216,
            "q4Value": 88.6435331230284,
            "areaValue": 76.1904761904762,
            "ancestorValue": 76.4550264550265,
            "englandValue": 69.8972433785404,
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ];
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}
### check quartile calculation for two indicators Benchmark against AreaGroup
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&indicator_ids=90453&area_code=N85008&area_type=gps&ancestor_code=U79121&benchmark_ref_type=SubNational
> {%
    client.test("Calculate Quartile for two indicators", function (callbackfn, thisArg) {
        const expected = [
            {
                "age": {
                    "value": "16+ yrs",
                    "isAggregate": true
                },
                "sex": {
                    "value": "Persons",
                    "isAggregate": true
                },
                "reportingPeriod": "Yearly",
                "isAggregate": true,
                "year": 2024,
                "datePeriod": {
                "type": "Calendar",
                "from": "2024-01-01",
                "to": "2024-12-31"
                },
                "q0Value": 26.36997,
                "q1Value": 26.53913,
                "q2Value": 27.07651,
                "q3Value": 28.93029,
                "q4Value": 35.47526,
                "areaValue": 28.93029,
                "ancestorValue": 29.8274473053626,
                "englandValue": 27.15399,
                "indicatorId": 90453,
                "polarity": "NoJudgement",
                "frequency": "Annually"
            },
            {
                "age": {
                    "value": "53-70 yrs",
                    "isAggregate": true
                },
                "sex": {
                    "value": "Female",
                    "isAggregate": true
                },
                "reportingPeriod": "Yearly",
                "isAggregate": true,
                "year": 2023,
                "datePeriod": {
                "type": "Financial",
                "from": "2023-04-01",
                "to": "2024-03-31"
                },
                "q0Value": 70.0729927007299,
                "q1Value": 73.8372093023256,
                "q2Value": 76.1904761904762,
                "q3Value": 79.0476190476191,
                "q4Value": 80.1242236024845,
                "areaValue": 76.1904761904762,
                "ancestorValue": 76.4550264550265,
                "englandValue": 69.8972433785404,
                "indicatorId": 94063,
                "polarity": "NoJudgement",
                "frequency": "Annually"
            }
            ];
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}
### check Quartile comparison where area group has no data and returns null
GET http://localhost:5144/indicators/quartiles?indicator_ids=241&area_code=N85008&area_type=gps&ancestor_code=U79121

> {%
    client.test("Expected health data returned with rag comparison", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "17+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 0.51393,
            "q1Value": 6.94186,
            "q2Value": 8.06184,
            "q3Value": 9.1663,
            "q4Value": 17.51457,
            "areaValue": 7.27034,
            "ancestorValue": null,
            "englandValue": 7.65539435016159,
            "indicatorId": 241,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}


### check Quartile comparison where indicator is unknown
GET http://localhost:5144/indicators/quartiles?indicator_ids=999999&area_code=N85008&area_type=gps&ancestor_code=U79121

> {%
    client.test("check Quartile comparison where indicator is unknown", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": null,
            "sex": null,
            "reportingPeriod": null,
            "isAggregate": null,
            "year": null,
            "datePeriod": null,
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": null,
            "ancestorValue": null,
            "englandValue": null,
            "indicatorId": 999999,
            "polarity": null,
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area group is undefined
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_code=N85008&area_type=gps

> {%
    client.test("check Quartile comparison where area group is undefined", function (callbackfn, thisArg) {
        const expected = [
            {
                "age": {
                    "value": "16+ yrs",
                    "isAggregate": true
                },
                "sex": {
                    "value": "Persons",
                    "isAggregate": true
                },
                "reportingPeriod": "Yearly",
                "isAggregate": true,
                "year": 2024,
                "datePeriod": {
                "type": "Calendar",
                "from": "2024-01-01",
                "to": "2024-12-31"
                },
                "q0Value": 3.07953,
                "q1Value": 24.36787,
                "q2Value": 29.14221,
                "q3Value": 33.38074,
                "q4Value": 50.264,
                "areaValue": 28.93029,
                "ancestorValue": null,
                "englandValue": 27.15399,
                "indicatorId": 90453,
                "polarity": "NoJudgement",
                "frequency": "Annually"
            }
            ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_code is undefined
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_type=gps

> {%
    client.test("check Quartile comparison where area_code is undefined", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "16+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2024,
            "datePeriod": {
            "type": "Calendar",
            "from": "2024-01-01",
            "to": "2024-12-31"
            },
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": null,
            "ancestorValue": null,
            "englandValue": 27.15399,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_type is erroneous
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_type=erroneous_area_type

> {%
    client.test("check Quartile comparison where area_type is erroneous", function (callbackfn, thisArg) {
        const expected = [
          {
            "age": {
              "value": "16+ yrs",
              "isAggregate": true
            },
            "sex": {
              "value": "Persons",
              "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": null,
            "datePeriod": null,
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": null,
            "ancestorValue": null,
            "englandValue": null,
            "englandValue": null,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where area_type is missing
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453

> {%
    client.test("check Quartile comparison where area_type is missing", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter area_type must be supplied."
            }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison where indicator_ids is missing
GET http://localhost:5144/indicators/quartiles

> {%
    client.test("check Quartile comparison where indicator_ids is missing", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter indicator_ids must be supplied."
        }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison for county
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=counties-and-unitary-authorities
> {%
    client.test("check Quartile comparison for county", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
            "value": "15-55 yrs",
            "isAggregate": true
            },            
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2019,
            "datePeriod": {
            "type": "Calendar",
            "from": "2019-01-01",
            "to": "2019-12-31"
            },
            "q0Value": 20.76935,
            "q1Value": 24.72157,
            "q2Value": 25.99248,
            "q3Value": 27.44265,
            "q4Value": 29.42533,
            "areaValue": 20.76935,
            "ancestorValue": null,
            "englandValue": 25.80061,
            "indicatorId": 94103,
            "polarity": "LowIsGood",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison for district - same area as above - different result!
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=districts-and-unitary-authorities
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "15-55 yrs",
                "isAggregate": true
            },  
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,            
            "year": 2019,
            "datePeriod": {
            "type": "Calendar",
            "from": "2019-01-01",
            "to": "2019-12-31"
            },
            "q0Value": 20.76935,
            "q1Value": 24.79926,
            "q2Value": 26.05024,
            "q3Value": 27.5906,
            "q4Value": 29.42533,
            "areaValue": 20.76935,
            "ancestorValue": null,
            "englandValue": 25.80061,
            "indicatorId": 94103,
            "polarity": "LowIsGood",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison when benmchmrk_ref_type is AreaGroup and AreaGroup is not supplied
GET http://localhost:5144/indicators/quartiles?indicator_ids=94103&area_code=E09000027&area_type=districts-and-unitary-authorities&benchmark_ref_type=SubNational
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = {
            "message": "Parameter ancestor_code must be supplied if benchmark_ref_type is set to SubNational."
        }
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison against Fingertips - https://fingertips.phe.org.uk/profile/dementia/data#page/1
GET http://localhost:5144/indicators/quartiles?indicator_ids=91894&area_code=E54000028&area_type=nhs-integrated-care-boards&ancestor_code=E40000003
> {%
    client.test("check Quartile comparison for NHS Integrated Care Boards Place of death: Dementia", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "65+ yrs",
                "isAggregate": true
            },            
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Calendar",
            "from": "2023-01-01",
            "to": "2023-12-31"
            },
            "q0Value": 17.03,
            "q1Value": 21.08,
            "q2Value": 26.23,
            "q3Value": 29.69,
            "q4Value": 39.48,
            "areaValue": 34.98,
            "ancestorValue": 36.664729808251,
            "englandValue": 26.26,
            "indicatorId": 91894,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison against Fingertips - https://fingertips.phe.org.uk/profile/tobacco-control/data#page/1/gid/1938132885/ati/502/iid/92443/age/168/sex/4/cat/-1/ctp/-1/yrr/1/cid/4/tbm/1
GET http://localhost:5144/indicators/quartiles?indicator_ids=93085&area_code=E09000002&area_type=counties-and-unitary-authorities
> {%
    client.test("check Quartile comparison for district", function (callbackfn, thisArg) {
        const expected = [
  {
            "age": {
                "value": "All ages",
                "isAggregate": true
            },    
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 2.8,
            "q1Value": 5.3,
            "q2Value": 7.5,
            "q3Value": 9.1,
            "q4Value": 17.5,
            "areaValue": 3.7,
            "ancestorValue": null,
            "englandValue": 7.4,
            "indicatorId": 93085,
            "polarity": "LowIsGood",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### check Quartile comparison when there is insufficient data
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_code=D83060&area_type=gps&ancestor_code=U10430&benchmark_ref_type=SubNational
> {%
    client.test("check Quartile comparison when there is in sufficient data", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "16+ yrs",
                "isAggregate": true
            },            
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2024,
            "datePeriod": {
            "type": "Calendar",
            "from": "2024-01-01",
            "to": "2024-12-31"
            },
            "q0Value": null,
            "q1Value": null,
            "q2Value": null,
            "q3Value": null,
            "q4Value": null,
            "areaValue": 28.32882,
            "ancestorValue": 26.7614436271931,
            "englandValue": 27.15399,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile GP benchmarked against ICB-Sub 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=N85008&area_type=gps&ancestor_code=E38000208&benchmark_ref_type=SubNational

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "53-70 yrs",
                "isAggregate": true
            },            
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 62.0320855614973,
            "q1Value": 70.4697986577181,
            "q2Value": 74.9244712990937,
            "q3Value": 79.0476190476191,
            "q4Value": 84.5161290322581,
            "areaValue": 76.1904761904762,
            "ancestorValue": 72.5647792706334,
            "englandValue": 69.8972433785404,
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against ICB 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&ancestor_code=E54000008&benchmark_ref_type=SubNational

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "53-70 yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 66.2418790604698,
            "q1Value": 69.4552026852569,
            "q2Value": 73.1362196409715,
            "q3Value": 74.0236686390533,
            "q4Value": 76.360153256705,
            "areaValue": 72.5647792706334,
            "ancestorValue": 72.0120548814339,
            "englandValue": 69.8972433785404,
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against NHS Region 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&ancestor_code=E40000010&benchmark_ref_type=SubNational

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "53-70 yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 59.2823399336617,
            "q1Value": 66.546633057256,
            "q2Value": 72.5647792706334,
            "q3Value": 74.0236686390533,
            "q4Value": 76.360153256705,
            "areaValue": 72.5647792706334,
            "ancestorValue": 70.7067909967071,
            "englandValue": 69.8972433785404,
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile Sub-ICB benchmarked against England 
GET http://localhost:5144/indicators/quartiles?indicator_ids=94063&area_code=E38000208&area_type=nhs-sub-integrated-care-boards&ancestor_code=E40000010

> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "53-70 yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Female",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Financial",
            "from": "2023-04-01",
            "to": "2024-03-31"
            },
            "q0Value": 54.5377677564825,
            "q1Value": 67.9388408201968,
            "q2Value": 71.7729933525151,
            "q3Value": 74.0390187367201,
            "q4Value": 80.8172397550636,
            "areaValue": 72.5647792706334,
            "ancestorValue": 70.7067909967071,
            "englandValue": 69.8972433785404,
            "indicatorId": 94063,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile District benchmarked against County 
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&ancestor_code=E10000032&benchmark_ref_type=SubNational


> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [{
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "age": {
                "value": "30+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
                "type": "Calendar",
                "from": "2023-01-01",
                "to": "2023-12-31"
            },
            "q0Value": 4.48617,
            "q1Value": 4.53989,
            "q2Value": 4.83127,
            "q3Value": 4.91231,
            "q4Value": 5.13148,
            "areaValue": 4.91231,
            "ancestorValue": 4.75958,
            "englandValue": 5.2205
        }]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });

### Basic Quartile District benchmarked against Region
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&ancestor_code=E12000008&benchmark_ref_type=SubNational
> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "30+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Calendar",
            "from": "2023-01-01",
            "to": "2023-12-31"
            },
            "q0Value": 4.25991,
            "q1Value": 4.76673,
            "q2Value": 4.92386,
            "q3Value": 5.29198,
            "q4Value": 5.83444,
            "areaValue": 4.91231,
            "ancestorValue": 5.05386,
            "englandValue": 5.2205,
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Basic Quartile District benchmarked against England
GET http://localhost:5144/indicators/quartiles?indicator_ids=93861&area_code=E07000223&area_type=districts-and-unitary-authorities&ancestor_code=E12000008
> {%
    client.test("Calculate Quartile for a single indicator", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "30+ yrs",
                "isAggregate": true
            },            
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2023,
            "datePeriod": {
            "type": "Calendar",
            "from": "2023-01-01",
            "to": "2023-12-31"
            },
            "q0Value": 3.26941,
            "q1Value": 4.75739,
            "q2Value": 5.21437,
            "q3Value": 5.56829,
            "q4Value": 7.36706,
            "areaValue": 4.91231,
            "ancestorValue": 5.05386,
            "englandValue": 5.2205,
            "indicatorId": 93861,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Ensure unpublished data is not returned
GET http://localhost:5144/indicators/quartiles?indicator_ids=90453&area_code=K84031&area_type=gps&ancestor_code=E38000136
> {%
    client.test("Ensure unpublished data is not returned", function (callbackfn, thisArg) {
                const expected = [
        {
            "age": {
                "value": "16+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2024,
            "datePeriod": {
            "type": "Calendar",
            "from": "2024-01-01",
            "to": "2024-12-31"
            },
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": 25.01118,
            "ancestorValue": null,
            "englandValue": 27.15399,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Ensure published data is returned
GET http://localhost:5144/indicators/quartiles/all?indicator_ids=90453&area_code=K84031&area_type=gps&ancestor_code=E38000136
> {%
    client.test("Ensure published data is returned", function (callbackfn, thisArg) {
        const expected = [
        {
            "age": {
                "value": "16+ yrs",
                "isAggregate": true
            },
            "sex": {
                "value": "Persons",
                "isAggregate": true
            },
            "reportingPeriod": "Yearly",
            "isAggregate": true,
            "year": 2025,
            "datePeriod": {
            "type": "Calendar",
            "from": "2025-01-01",
            "to": "2025-12-31"
            },
            "q0Value": 3.07953,
            "q1Value": 24.36787,
            "q2Value": 29.14221,
            "q3Value": 33.38074,
            "q4Value": 50.264,
            "areaValue": 25.01118,
            "ancestorValue": null,
            "englandValue": 27.15399,
            "indicatorId": 90453,
            "polarity": "NoJudgement",
            "frequency": "Annually"
        }
        ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Check quartile calculation for indicator with three segments
GET http://localhost:5144/indicators/quartiles?indicator_ids=22401&area_code=E12000004&area_type=regions&ancestor_code=E92000001
> {%
    client.test("Check quartile calculation for indicator with three segments", function (callbackfn, thisArg) {
        const expected = [
    {
    "age": {
      "value": "65+ yrs",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Financial",
      "from": "2023-04-01",
      "to": "2024-03-31"
    },
    "q0Value": 1956.32418,
    "q1Value": 2166.67966,
    "q2Value": 2231.32874,
    "q3Value": 2255.32344,
    "q4Value": 2399.78208,
    "areaValue": 2166.67966,
    "ancestorValue": 2203.2213,
    "englandValue": 2203.2213,
    "indicatorId": 22401,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65+ yrs",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Financial",
      "from": "2023-04-01",
      "to": "2024-03-31"
    },
    "q0Value": 1476.6374,
    "q1Value": 1578.54939,
    "q2Value": 1683.08712,
    "q3Value": 1740.22877,
    "q4Value": 1834.67254,
    "areaValue": 1578.54939,
    "ancestorValue": 1661.48634,
    "englandValue": 1661.48634,
    "indicatorId": 22401,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65+ yrs",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": true,
    "year": 2023,
    "datePeriod": {
      "type": "Financial",
      "from": "2023-04-01",
      "to": "2024-03-31"
    },
    "q0Value": 1826.50684,
    "q1Value": 1908.49625,
    "q2Value": 1997.62913,
    "q3Value": 2060.81065,
    "q4Value": 2121.51501,
    "areaValue": 1908.49625,
    "ancestorValue": 1983.96075,
    "englandValue": 1983.96075,
    "indicatorId": 22401,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  }

            ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Check quartile calculation for two indicators with multiple segments
GET http://localhost:5144/indicators/quartiles?indicator_ids=93763&indicator_ids=93861&area_code=E06000008&area_type=counties-and-unitary-authorities&ancestor_code=E12000002
> {%
    client.test("Check Quartiles for Alcohol and Particulates for North West Region", function (callbackfn, thisArg) {
        const expected = [
  {
    "age": {
      "value": "All ages",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 11.09163637,
    "q1Value": 18.69820945,
    "q2Value": 22.51041987,
    "q3Value": 25.69228524,
    "q4Value": 42.7122575,
    "areaValue": 24.66636114,
    "ancestorValue": 26.88721774,
    "englandValue": 22.08863091,
    "indicatorId": 93763,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "All ages",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 37.27646954,
    "q1Value": 53.94435077,
    "q2Value": 63.5984499,
    "q3Value": 74.51833078,
    "q4Value": 112.9889005,
    "areaValue": 85.39449579,
    "ancestorValue": 73.74691052,
    "englandValue": 62.13045118,
    "indicatorId": 93763,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "All ages",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": true,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 24.62869762,
    "q1Value": 35.31168865,
    "q2Value": 41.37843818,
    "q3Value": 48.80372774,
    "q4Value": 76.13918592,
    "areaValue": 54.00447893,
    "ancestorValue": 48.7434503,
    "englandValue": 40.65913464,
    "indicatorId": 93763,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "30+ yrs",
      "isAggregate": true
    }, 
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": true,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 3.26941,
    "q1Value": 4.81031,
    "q2Value": 5.3042,
    "q3Value": 5.73332,
    "q4Value": 7.36706,
    "areaValue": 4.82771,
    "ancestorValue": 4.92924,
    "englandValue": 5.2205,
    "indicatorId": 93861,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  }

            ]
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}



### Check quartile calculation for indicator with multiple age segments
GET http://localhost:5144/indicators/quartiles?indicator_ids=93468&area_code=N85008&area_type=gps&ancestor_code=U79121
> {%
    client.test("Check Quartiles for Alcohol and Particulates for North West Region", function (callbackfn, thisArg) {
        const expected = 
[
  {
    "age": {
      "value": "<18 yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0.0425170068027211,
    "q1Value": 18.8030341990229,
    "q2Value": 20.7539410555175,
    "q3Value": 22.8571428571429,
    "q4Value": 52.3309379030772,
    "areaValue": 18.4183598889051,
    "ancestorValue": 17.7750802046302,
    "englandValue": 20.8974608946242,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "0-4 yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0,
    "q1Value": 4.02191995302867,
    "q2Value": 4.60625946491671,
    "q3Value": 5.34386617100372,
    "q4Value": 13.2860665844636,
    "areaValue": 3.79330507235784,
    "ancestorValue": 3.58536373883638,
    "englandValue": 4.72350028525507,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "15+ yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": null,
    "datePeriod": null,
    "q0Value": null,
    "q1Value": null,
    "q2Value": null,
    "q3Value": null,
    "q4Value": null,
    "areaValue": null,
    "ancestorValue": null,
    "englandValue": null,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "5-14 yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0.0425170068027211,
    "q1Value": 10.3006681514477,
    "q2Value": 11.4813913889565,
    "q3Value": 12.7360236949278,
    "q4Value": 30.3298323198821,
    "areaValue": 10.6271013009794,
    "ancestorValue": 9.94826440070522,
    "englandValue": 11.5285875679909,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65+ yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0.484429065743945,
    "q1Value": 15.4796124773768,
    "q2Value": 19.7207541216376,
    "q3Value": 23.8746897430737,
    "q4Value": 44.6302586882676,
    "areaValue": 30.1417921356527,
    "ancestorValue": 29.5196392959334,
    "englandValue": 17.7872254064141,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "75+ yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0.112456747404844,
    "q1Value": 7.02524698133919,
    "q2Value": 9.54601352736216,
    "q3Value": 12.1018222284045,
    "q4Value": 27.7501959759603,
    "areaValue": 16.5326706621839,
    "ancestorValue": 15.7388941876933,
    "englandValue": 8.73627799140452,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "85+ yrs",
      "isAggregate": false
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2024,
    "datePeriod": {
      "type": "FinancialYearEndPoint",
      "from": "2024-03-31",
      "to": "2024-03-31"
    },
    "q0Value": 0,
    "q1Value": 1.77385789317213,
    "q2Value": 2.48295156495891,
    "q3Value": 3.24588706091596,
    "q4Value": 12.5868055555556,
    "areaValue": 4.99196023973103,
    "ancestorValue": 4.74724703026099,
    "englandValue": 2.35766727530359,
    "indicatorId": 93468,
    "polarity": "NoJudgement",
    "frequency": "Annually"
  }
]          
        


        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Check quartile calculation for indicator with multiple reportingPeriods and multiple ages
GET http://localhost:5144/indicators/quartiles?indicator_ids=91102&area_code=E08000029&area_type=districts-and-unitary-authorities
> {%
    client.test("Check Quartiles for Alcohol and Particulates for North West Region", function (callbackfn, thisArg) {
        const expected = [
  {
    "age": {
      "value": "65",
      "isAggregate": true
    },
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "ThreeYearly",
    "isAggregate": false,
    "year": 2021,
    "datePeriod": {
      "type": "Calendar",
      "from": "2021-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 18.65,
    "q1Value": 20.46,
    "q2Value": 21.31,
    "q3Value": 22.01,
    "q4Value": 23.25,
    "areaValue": 22.02,
    "ancestorValue": null,
    "englandValue": 21.14,
    "indicatorId": 91102,
    "polarity": "HighIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65",
      "isAggregate": true
    },
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 18.69,
    "q1Value": 20.58,
    "q2Value": 21.48,
    "q3Value": 22.18,
    "q4Value": 23.85,
    "areaValue": 22.22,
    "ancestorValue": null,
    "englandValue": 21.27,
    "indicatorId": 91102,
    "polarity": "HighIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65",
      "isAggregate": true
    },
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "ThreeYearly",
    "isAggregate": false,
    "year": 2021,
    "datePeriod": {
      "type": "Calendar",
      "from": "2021-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 16.12,
    "q1Value": 18,
    "q2Value": 18.85,
    "q3Value": 19.57,
    "q4Value": 21.01,
    "areaValue": 18.89,
    "ancestorValue": null,
    "englandValue": 18.67,
    "indicatorId": 91102,
    "polarity": "HighIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "65",
      "isAggregate": true
    },
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 16.26,
    "q1Value": 18.21,
    "q2Value": 18.92,
    "q3Value": 19.75,
    "q4Value": 20.87,
    "areaValue": 18.96,
    "ancestorValue": null,
    "englandValue": 18.84,
    "indicatorId": 91102,
    "polarity": "HighIsGood",
    "frequency": "Annually"
  }
]

        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}

### Check quartile calculation for indicator with multiple reportingPeriods and multiple sexes
GET http://localhost:5144/indicators/quartiles?indicator_ids=108&area_code=E08000029&area_type=districts-and-unitary-authorities
> {%
    client.test("Check Quartiles for Alcohol and Particulates for North West Region", function (callbackfn, thisArg) {
        const expected = [
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "ThreeYearly",
    "isAggregate": false,
    "year": 2021,
    "datePeriod": {
      "type": "Calendar",
      "from": "2021-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 156.57654,
    "q1Value": 225.94169,
    "q2Value": 258.79422,
    "q3Value": 310.58244,
    "q4Value": 454.08032,
    "areaValue": 235.31321,
    "ancestorValue": null,
    "englandValue": 273.31975,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Female",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 146.52737,
    "q1Value": 218.98219,
    "q2Value": 255.45544,
    "q3Value": 306.14278,
    "q4Value": 489.30243,
    "areaValue": 210.52778,
    "ancestorValue": null,
    "englandValue": 267.43674,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "ThreeYearly",
    "isAggregate": false,
    "year": 2021,
    "datePeriod": {
      "type": "Calendar",
      "from": "2021-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 232.64874,
    "q1Value": 355.56077,
    "q2Value": 410.93041,
    "q3Value": 491.93692,
    "q4Value": 764.11515,
    "areaValue": 390.983,
    "ancestorValue": null,
    "englandValue": 429.23166,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Male",
      "isAggregate": false
    },
    "reportingPeriod": "Yearly",
    "isAggregate": false,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 244.54767,
    "q1Value": 346.32543,
    "q2Value": 404.75532,
    "q3Value": 475.29821,
    "q4Value": 754.82587,
    "areaValue": 389.34954,
    "ancestorValue": null,
    "englandValue": 420.07872,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "ThreeYearly",
    "isAggregate": true,
    "year": 2021,
    "datePeriod": {
      "type": "Calendar",
      "from": "2021-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 202.35228,
    "q1Value": 287.19345,
    "q2Value": 332.86959,
    "q3Value": 394.24229,
    "q4Value": 609.03033,
    "areaValue": 310.18837,
    "ancestorValue": null,
    "englandValue": 349.06249,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  },
  {
    "age": {
      "value": "<75 yrs",
      "isAggregate": true
    },
    "sex": {
      "value": "Persons",
      "isAggregate": true
    },
    "reportingPeriod": "Yearly",
    "isAggregate": true,
    "year": 2023,
    "datePeriod": {
      "type": "Calendar",
      "from": "2023-01-01",
      "to": "2023-12-31"
    },
    "q0Value": 207.11832,
    "q1Value": 280.61517,
    "q2Value": 326.17573,
    "q3Value": 385.66582,
    "q4Value": 622.11748,
    "areaValue": 296.36371,
    "ancestorValue": null,
    "englandValue": 341.57323,
    "indicatorId": 108,
    "polarity": "LowIsGood",
    "frequency": "Annually"
  }
]

        client.assert(response.status === 200, "Response status is not 200");
        client.assert(JSON.stringify(response.body) === JSON.stringify(expected), "Response body does not match");
    });
%}