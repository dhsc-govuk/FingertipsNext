name: Execute e2e tests

env:
  frontend-directory: ./frontend/fingertips-frontend
  NEXT_TELEMETRY_DISABLED: true
  NODE_VERSION: 22.x

on:
  workflow_dispatch:
    inputs:
      update-snapshots:
        description: 'Update snapshots?'
        type: boolean
  workflow_call:
    inputs:
      e2e-test-container-image:
        description: 'container image to run the e2e tests in - for CD test executions'
        required: false
        type: string
    secrets:
      slack-webhook-url:
        description: 'URL of the slack webhook'
        required: false
      fingertips_e2e_db_password:
        description: 'Password for the database'
        required: false
jobs:
  execute-e2e-tests:
    name: Execute e2e tests
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.e2e-test-container-image }}

    defaults:
      run:
        working-directory: ${{ env.frontend-directory }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.frontend-directory }}/package-lock.json

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ env.frontend-directory }}/node_modules
            ~/.cache/ms-playwright
            ${{ env.frontend-directory }}/.test/**
          key: cache/${{github.repository}}/${{github.ref}}
          restore-keys: cache/${{github.repository}}/refs/heads/main

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for db-setup - for CI test execution
        if: inputs.e2e-test-container-image == null
        run: |
          echo "DB_PASSWORD=${{ secrets.fingertips_e2e_db_password }}" > .env
          echo "DB_NAME=fingertips" >> .env
          echo "DB_USER=sa" >> .env

      - name: Install playwright dependencies - for CI test execution
        if: inputs.e2e-test-container-image == null
        run: npx playwright install --with-deps chromium webkit

      - name: Initialize snapshots if not in cache or update snapshots manually
        if: ${{ steps.cache.outputs.cache-hit != 'true' || inputs.update-snapshots == 'true'}}
        run: npm run test-e2e-ci-update-snapshots

      - name: Run Playwright tests in CI
        if: inputs.e2e-test-container-image == null
        run: npm run test-e2e-ci-docker

      - name: Set Job URL for slack message - for CD test execution
        if: inputs.e2e-test-container-image != null
        run: |
          echo "JOB_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Run Playwright tests in CD
        if: inputs.e2e-test-container-image != null
        run: npm run test-e2e-ci-azure
        env:
          FINGERTIPS_FRONTEND_URL: ${{ vars.FINGERTIPS_FRONTEND_URL }}

      - name: Upload playwright report and screenshot if e2e tests fail - always on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-failure-artefacts
          path: |
            ${{ env.frontend-directory }}/playwright-report/
            ${{ env.frontend-directory }}/test-results/*/*.png
          retention-days: 10

      - name: Send slack message if e2e tests fail - for CD test execution
        if: failure() && inputs.e2e-test-container-image != null
        run: |
          npx slack-ctrf results ctrf/ctrf-report.json --title "E2E Test Failure Against Deployed Fingertips Instance"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack-webhook-url }}
