name: Execute e2e tests

env:
  frontend-directory: ./frontend/fingertips-frontend
  api-directory: ./api
  NEXT_TELEMETRY_DISABLED: true
  NODE_VERSION: 22.x
  BRANCH_NAME: ${{ github.event_name == 'pull_request' && format('refs/pull/{0}/merge', github.event.pull_request.number) || (github.head_ref || github.ref_name) }}

on:
  workflow_call:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        type: string
      playwright-mode:
        description: "Mode from which tests are run - either run inside docker or against the azure stack"
        required: true
        type: string
      update_screenshots:
        description: "Whether to update baseline screenshots"
        required: false
        default: false
        type: boolean
    secrets:
      slack-webhook-url:
        description: "URL of the slack webhook"
        required: false
      fingertips_e2e_db_password:
        description: "Password for the database"
        required: false
jobs:
  execute-e2e-tests-docker:
    name: Execute e2e tests - Docker
    runs-on: ubuntu-latest
    if: inputs.playwright-mode == 'docker'

    env:
      dotnet-version: 9.0.x
      DB_NAME: fingertips
      DB_USER: sa
      DB_PASSWORD: ${{ secrets.fingertips_e2e_db_password }}
      UPLOAD_STORAGE_CONTAINER_NAME: fingertips-upload-container
      AUTH_SECRET: "random-string-for-testing-123"
      AUTH_CLIENT_SECRET: ${{ secrets.DEVELOPMENT_ENTRA_CLIENT_SECRET }}
      AUTH_CLIENT_ID: ${{ vars.DEVELOPMENT_ENTRA_CLIENT_ID }}
      AUTH_TENANT_ID: ${{ vars.DEVELOPMENT_ENTRA_TENANT_ID }}
      AZUREAD__INSTANCE: ${{ vars.DEVELOPMENT_ENTRA_INSTANCE_URI }}
      AZUREAD__TENANTID: ${{ vars.DEVELOPMENT_ENTRA_TENANT_ID }}
      AZUREAD__CLIENTID: ${{ vars.DEVELOPMENT_ENTRA_CLIENT_ID }}
      ADMINROLE: ${{ vars.DEVELOPMENT_ADMINISTRATOR_GROUP_ID }}

    defaults:
      run:
        working-directory: ${{ env.frontend-directory }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.frontend-directory }}/package-lock.json

      - name: Cache playwright dependencies - for CI test execution
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: cache/${{github.repository}}/${{env.BRANCH_NAME}}

      - name: Install dependencies
        run: npm ci

      - name: Setup dotnet
        if: ${{ !inputs.update_screenshots }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.dotnet-version}}
      
      - name: Start Backend Docker services
        run: |
          npm run start:backend-services

      - name: Inject development mode settings
        working-directory: ./api/DHSC.FingertipsNext.Api
        run: |
          echo "OUTPUTVAR=$(dotnet user-jwts key  | sed -n "s/^Signing Key: '\(.*\)'/\1/p")" 
          echo OUTPUTVAR
          echo OUTPUTVAR >> $GITHUB_ENV 

      - name: Start Application Docker services
        run: MOCK_SERVER=false npm run start:app-services

      - name: Run .http API tests
        if: ${{ !inputs.update_screenshots }}
        working-directory: ./api
        run: |
          npx httpyac send ./**/*.http --all --json --filter only-failed -o headers --raw --output-failed exchange -v | tee httpyacresults.json
          HTTP_EXIT_CODE=${PIPESTATUS[0]}

          # Exit with the same code that httpyac returned
          exit $HTTP_EXIT_CODE

      - name: Set dynamic HTTP results artifact name
        if: ${{ !inputs.update_screenshots }}
        run: echo "HTTP_ARTIFACT_NAME=httpyac-results-$(date +%s)" >> $GITHUB_ENV

      - name: Upload .http test results
        if: ${{ !inputs.update_screenshots }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.HTTP_ARTIFACT_NAME }}
          path: ./api/httpyacresults.json
          retention-days: 5
