name: Fingertips CI

on:
  push:
    branches:
      ## ** is required to match branches with / in their name
      - "**"
  pull_request:
    branches:
      - main

jobs:
  frontend-build:
    name: Build frontend
    runs-on: ubuntu-latest

    env:
      frontend-directory: ./frontend/fingertips-frontend

      # Disable Next.js telemetry tracking (https://nextjs.org/telemetry)
      NEXT_TELEMETRY_DISABLED: true

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: ["20.x", "22.x"]

    defaults:
      run:
        working-directory: ${{ env.frontend-directory }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ${{ env.frontend-directory }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Perform type checking
        run: npm run typecheck

      - name: Lint code
        run: npm run lint

  container-build:
    name: Build container
    runs-on: ubuntu-latest

    strategy:
      matrix:
        application: ["Frontend", "API"]
        include:
          - application: Frontend
            container-tag: dhsc.fingertipsnext.frontend
            context-location: frontend/fingertips-frontend
          - application: API
            container-tag: dhsc.fingertipsnext.api
            context-location: api/DHSC.FingertipsNext.Api/DHSC.FingertipsNext.Api

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # TODO: Re-enable this when we have Azure access
      # TODO: Investigate the use of OpenID Connect for authentication: https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/about-security-hardening-with-openid-connect
      # - name: Login to container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ vars.CONTAINER_REGISTRY }}
      #     username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      #     password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Generate container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # TODO: Tag with the registry name when we have Azure access
          # images: ${{ vars.CONTAINER_REGISTRY }}/${{ matrix.container-tag }}
          images: ${{ matrix.container-tag }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.run_id  }}
            type=raw,value=${{ github.run_id  }}-${{ github.run_attempt }}

      - name: Build and push container
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context-location }}
          # TODO: Re-enable pushing the image to the repository when we have Azure access
          # push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest

    strategy:
      matrix:
        tf-dir: ["account", "environment"]

    defaults:
      run:
        working-directory: terraform/${{ matrix.tf-dir }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Initialise Terraform
        run: terraform init -backend=false

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Check Terraform formatting
        run: terraform fmt -recursive -check -diff
