/* tslint:disable */
/* eslint-disable */
/**
 * DHSC.FingertipsNext.Api | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WeatherForecast,
} from '../models/index';
import {
    WeatherForecastFromJSON,
    WeatherForecastToJSON,
} from '../models/index';

export interface GetWeatherForecastRequest {
    apiVersion?: string;
    xVersion?: string;
}

/**
 * WeatherForecastApi - interface
 * 
 * @export
 * @interface WeatherForecastApiInterface
 */
export interface WeatherForecastApiInterface {
    /**
     * 
     * @param {string} [apiVersion] 
     * @param {string} [xVersion] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherForecastApiInterface
     */
    getWeatherForecastRaw(requestParameters: GetWeatherForecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WeatherForecast>>>;

    /**
     */
    getWeatherForecast(requestParameters: GetWeatherForecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WeatherForecast>>;

}

/**
 * 
 */
export class WeatherForecastApi extends runtime.BaseAPI implements WeatherForecastApiInterface {

    /**
     */
    async getWeatherForecastRaw(requestParameters: GetWeatherForecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WeatherForecast>>> {
        const queryParameters: any = {};

        if (requestParameters['apiVersion'] != null) {
            queryParameters['api-version'] = requestParameters['apiVersion'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['xVersion'] != null) {
            headerParameters['X-Version'] = String(requestParameters['xVersion']);
        }

        const response = await this.request({
            path: `/WeatherForecast`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WeatherForecastFromJSON));
    }

    /**
     */
    async getWeatherForecast(requestParameters: GetWeatherForecastRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WeatherForecast>> {
        const response = await this.getWeatherForecastRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
