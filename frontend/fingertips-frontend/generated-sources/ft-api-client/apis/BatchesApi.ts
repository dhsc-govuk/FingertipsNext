/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Batch,
  GetAreaHierarchies500Response,
} from '../models/index';
import {
    BatchFromJSON,
    BatchToJSON,
    GetAreaHierarchies500ResponseFromJSON,
    GetAreaHierarchies500ResponseToJSON,
} from '../models/index';

/**
 * BatchesApi - interface
 * 
 * @export
 * @interface BatchesApiInterface
 */
export interface BatchesApiInterface {
    /**
     * Get details of all health data upload batches that are for indicators that you have permissions to modify. 
     * @summary Get all batches
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApiInterface
     */
    getBatchesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Batch>>>;

    /**
     * Get details of all health data upload batches that are for indicators that you have permissions to modify. 
     * Get all batches
     */
    getBatches(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Batch>>;

}

/**
 * 
 */
export class BatchesApi extends runtime.BaseAPI implements BatchesApiInterface {

    /**
     * Get details of all health data upload batches that are for indicators that you have permissions to modify. 
     * Get all batches
     */
    async getBatchesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Batch>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/batches`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BatchFromJSON));
    }

    /**
     * Get details of all health data upload batches that are for indicators that you have permissions to modify. 
     * Get all batches
     */
    async getBatches(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Batch>> {
        const response = await this.getBatchesRaw(initOverrides);
        return await response.value();
    }

}
