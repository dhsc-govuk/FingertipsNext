/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a health data point for a public health indicator with a count, value, upper confidence interval, lower confidence interval and a year.
 * @export
 * @interface HealthDataPoint
 */
export interface HealthDataPoint {
    /**
     * The year that the data point is for
     * @type {number}
     * @memberof HealthDataPoint
     */
    year: number;
    /**
     * The count
     * @type {number}
     * @memberof HealthDataPoint
     */
    count: number;
    /**
     * The value
     * @type {number}
     * @memberof HealthDataPoint
     */
    value: number;
    /**
     * The lower confidence interval
     * @type {number}
     * @memberof HealthDataPoint
     */
    lowerCi: number;
    /**
     * The upper confidence interval
     * @type {number}
     * @memberof HealthDataPoint
     */
    upperCi: number;
}

/**
 * Check if a given object implements the HealthDataPoint interface.
 */
export function instanceOfHealthDataPoint(value: object): value is HealthDataPoint {
    if (!('year' in value) || value['year'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('lowerCi' in value) || value['lowerCi'] === undefined) return false;
    if (!('upperCi' in value) || value['upperCi'] === undefined) return false;
    return true;
}

export function HealthDataPointFromJSON(json: any): HealthDataPoint {
    return HealthDataPointFromJSONTyped(json, false);
}

export function HealthDataPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthDataPoint {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'],
        'count': json['count'],
        'value': json['value'],
        'lowerCi': json['lowerCi'],
        'upperCi': json['upperCi'],
    };
}

export function HealthDataPointToJSON(json: any): HealthDataPoint {
    return HealthDataPointToJSONTyped(json, false);
}

export function HealthDataPointToJSONTyped(value?: HealthDataPoint | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'year': value['year'],
        'count': value['count'],
        'value': value['value'],
        'lowerCi': value['lowerCi'],
        'upperCi': value['upperCi'],
    };
}

