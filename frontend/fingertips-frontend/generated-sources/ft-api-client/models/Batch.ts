/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Details of a health data upload batch.
 * @export
 * @interface Batch
 */
export interface Batch {
    /**
     * The unique identifier of the batch.
     * @type {string}
     * @memberof Batch
     */
    batchId: string;
    /**
     * Unique ID of the indicator.
     * @type {number}
     * @memberof Batch
     */
    indicatorId: number;
    /**
     * The name of the file originally uploaded in order to create the batch.
     * @type {string}
     * @memberof Batch
     */
    originalFilename: string;
    /**
     * When the batch was created.
     * @type {Date}
     * @memberof Batch
     */
    createdAt: Date;
    /**
     * When the data in the batch will be published.
     * @type {Date}
     * @memberof Batch
     */
    publishedAt: Date;
    /**
     * When the data in the batch was deleted.
     * @type {Date}
     * @memberof Batch
     */
    deletedAt?: Date;
    /**
     * The ID of the user who uploaded the batch.
     * @type {string}
     * @memberof Batch
     */
    userId: string;
    /**
     * The ID of the user who deleted the batch.
     * @type {string}
     * @memberof Batch
     */
    deletedUserId?: string;
    /**
     * The current status of the batch.
     * @type {string}
     * @memberof Batch
     */
    status: BatchStatusEnum;
}


/**
 * @export
 */
export const BatchStatusEnum = {
    Received: 'Received',
    Deleted: 'Deleted'
} as const;
export type BatchStatusEnum = typeof BatchStatusEnum[keyof typeof BatchStatusEnum];


/**
 * Check if a given object implements the Batch interface.
 */
export function instanceOfBatch(value: object): value is Batch {
    if (!('batchId' in value) || value['batchId'] === undefined) return false;
    if (!('indicatorId' in value) || value['indicatorId'] === undefined) return false;
    if (!('originalFilename' in value) || value['originalFilename'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('publishedAt' in value) || value['publishedAt'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function BatchFromJSON(json: any): Batch {
    return BatchFromJSONTyped(json, false);
}

export function BatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): Batch {
    if (json == null) {
        return json;
    }
    return {
        
        'batchId': json['batchId'],
        'indicatorId': json['indicatorId'],
        'originalFilename': json['originalFilename'],
        'createdAt': (new Date(json['createdAt'])),
        'publishedAt': (new Date(json['publishedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'userId': json['userId'],
        'deletedUserId': json['deletedUserId'] == null ? undefined : json['deletedUserId'],
        'status': json['status'],
    };
}

export function BatchToJSON(json: any): Batch {
    return BatchToJSONTyped(json, false);
}

export function BatchToJSONTyped(value?: Batch | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'batchId': value['batchId'],
        'indicatorId': value['indicatorId'],
        'originalFilename': value['originalFilename'],
        'createdAt': ((value['createdAt']).toISOString()),
        'publishedAt': ((value['publishedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
        'userId': value['userId'],
        'deletedUserId': value['deletedUserId'],
        'status': value['status'],
    };
}

