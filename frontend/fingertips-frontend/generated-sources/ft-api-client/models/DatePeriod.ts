/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PeriodType } from './PeriodType';
import {
    PeriodTypeFromJSON,
    PeriodTypeFromJSONTyped,
    PeriodTypeToJSON,
    PeriodTypeToJSONTyped,
} from './PeriodType';
import type { Frequency } from './Frequency';
import {
    FrequencyFromJSON,
    FrequencyFromJSONTyped,
    FrequencyToJSON,
    FrequencyToJSONTyped,
} from './Frequency';

/**
 * A date period for a health data point.
 * @export
 * @interface DatePeriod
 */
export interface DatePeriod {
    /**
     * 
     * @type {PeriodType}
     * @memberof DatePeriod
     */
    type: PeriodType;
    /**
     * 
     * @type {Frequency}
     * @memberof DatePeriod
     */
    frequency?: Frequency;
    /**
     * Date in ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof DatePeriod
     */
    from: Date;
    /**
     * Date in ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof DatePeriod
     */
    to: Date;
}



/**
 * Check if a given object implements the DatePeriod interface.
 */
export function instanceOfDatePeriod(value: object): value is DatePeriod {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function DatePeriodFromJSON(json: any): DatePeriod {
    return DatePeriodFromJSONTyped(json, false);
}

export function DatePeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatePeriod {
    if (json == null) {
        return json;
    }
    return {
        
        'type': PeriodTypeFromJSON(json['type']),
        'frequency': json['frequency'] == null ? undefined : FrequencyFromJSON(json['frequency']),
        'from': (new Date(json['from'])),
        'to': (new Date(json['to'])),
    };
}

export function DatePeriodToJSON(json: any): DatePeriod {
    return DatePeriodToJSONTyped(json, false);
}

export function DatePeriodToJSONTyped(value?: DatePeriod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': PeriodTypeToJSON(value['type']),
        'frequency': FrequencyToJSON(value['frequency']),
        'from': ((value['from']).toISOString().substring(0,10)),
        'to': ((value['to']).toISOString().substring(0,10)),
    };
}

