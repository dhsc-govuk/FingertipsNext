/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A area or geography that has associated public health data
 * @export
 * @interface Area
 */
export interface Area {
    /**
     * The unique area code of the area / geography
     * @type {string}
     * @memberof Area
     */
    code: string;
    /**
     * The name of the area / geography
     * @type {string}
     * @memberof Area
     */
    name: string;
    /**
     * The name of the associated hierarchy for the area / geography
     * @type {string}
     * @memberof Area
     */
    hierarchyName: string;
    /**
     * The type of the area / geography
     * @type {string}
     * @memberof Area
     */
    areaType: string;
    /**
     * The level in the hierarchy
     * @type {number}
     * @memberof Area
     */
    level?: number;
}

/**
 * Check if a given object implements the Area interface.
 */
export function instanceOfArea(value: object): value is Area {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('hierarchyName' in value) || value['hierarchyName'] === undefined) return false;
    if (!('areaType' in value) || value['areaType'] === undefined) return false;
    return true;
}

export function AreaFromJSON(json: any): Area {
    return AreaFromJSONTyped(json, false);
}

export function AreaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Area {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'name': json['name'],
        'hierarchyName': json['hierarchyName'],
        'areaType': json['areaType'],
        'level': json['level'] == null ? undefined : json['level'],
    };
}

export function AreaToJSON(json: any): Area {
    return AreaToJSONTyped(json, false);
}

export function AreaToJSONTyped(value?: Area | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'name': value['name'],
        'hierarchyName': value['hierarchyName'],
        'areaType': value['areaType'],
        'level': value['level'],
    };
}

