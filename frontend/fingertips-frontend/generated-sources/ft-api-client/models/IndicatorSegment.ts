/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthDataPoint } from './HealthDataPoint';
import {
    HealthDataPointFromJSON,
    HealthDataPointFromJSONTyped,
    HealthDataPointToJSON,
    HealthDataPointToJSONTyped,
} from './HealthDataPoint';
import type { SexData } from './SexData';
import {
    SexDataFromJSON,
    SexDataFromJSONTyped,
    SexDataToJSON,
    SexDataToJSONTyped,
} from './SexData';
import type { AgeData } from './AgeData';
import {
    AgeDataFromJSON,
    AgeDataFromJSONTyped,
    AgeDataToJSON,
    AgeDataToJSONTyped,
} from './AgeData';

/**
 * Represents a segment of an Indicator health data point for a public health indicator.
 * @export
 * @interface IndicatorSegment
 */
export interface IndicatorSegment {
    /**
     * 
     * @type {AgeData}
     * @memberof IndicatorSegment
     */
    age: AgeData;
    /**
     * 
     * @type {SexData}
     * @memberof IndicatorSegment
     */
    sex: SexData;
    /**
     * Indicates if the segment is the aggregate.
     * @type {boolean}
     * @memberof IndicatorSegment
     */
    isAggregate?: boolean;
    /**
     * The health data points for the area and indicator
     * @type {Array<HealthDataPoint>}
     * @memberof IndicatorSegment
     */
    healthData?: Array<HealthDataPoint>;
}

/**
 * Check if a given object implements the IndicatorSegment interface.
 */
export function instanceOfIndicatorSegment(value: object): value is IndicatorSegment {
    if (!('age' in value) || value['age'] === undefined) return false;
    if (!('sex' in value) || value['sex'] === undefined) return false;
    return true;
}

export function IndicatorSegmentFromJSON(json: any): IndicatorSegment {
    return IndicatorSegmentFromJSONTyped(json, false);
}

export function IndicatorSegmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndicatorSegment {
    if (json == null) {
        return json;
    }
    return {
        
        'age': AgeDataFromJSON(json['age']),
        'sex': SexDataFromJSON(json['sex']),
        'isAggregate': json['isAggregate'] == null ? undefined : json['isAggregate'],
        'healthData': json['healthData'] == null ? undefined : ((json['healthData'] as Array<any>).map(HealthDataPointFromJSON)),
    };
}

export function IndicatorSegmentToJSON(json: any): IndicatorSegment {
    return IndicatorSegmentToJSONTyped(json, false);
}

export function IndicatorSegmentToJSONTyped(value?: IndicatorSegment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'age': AgeDataToJSON(value['age']),
        'sex': SexDataToJSON(value['sex']),
        'isAggregate': value['isAggregate'],
        'healthData': value['healthData'] == null ? undefined : ((value['healthData'] as Array<any>).map(HealthDataPointToJSON)),
    };
}

