/* tslint:disable */
/* eslint-disable */
/**
 * Fingertips API
 * An API to query public health indicator data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ProfileFeedback@dhsc.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Area } from './Area';
import {
    AreaFromJSON,
    AreaFromJSONTyped,
    AreaToJSON,
    AreaToJSONTyped,
} from './Area';
import type { AreaType } from './AreaType';
import {
    AreaTypeFromJSON,
    AreaTypeFromJSONTyped,
    AreaTypeToJSON,
    AreaTypeToJSONTyped,
} from './AreaType';

/**
 *
 * @export
 * @interface AreaWithRelations
 */
export interface AreaWithRelations {
    /**
     * The unique area code of the area / geography
     * @type {string}
     * @memberof AreaWithRelations
     */
    code: string;
    /**
     * The name of the area / geography
     * @type {string}
     * @memberof AreaWithRelations
     */
    name: string;
    /**
     *
     * @type {AreaType}
     * @memberof AreaWithRelations
     */
    areaType: AreaType;
    /**
     *
     * @type {Array<Area>}
     * @memberof AreaWithRelations
     */
    parents?: Array<Area>;
    /**
     *
     * @type {Array<Area>}
     * @memberof AreaWithRelations
     */
    children?: Array<Area>;
    /**
     *
     * @type {Array<Area>}
     * @memberof AreaWithRelations
     */
    siblings?: Array<Area>;
}

/**
 * Check if a given object implements the AreaWithRelations interface.
 */
export function instanceOfAreaWithRelations(value: object): value is AreaWithRelations {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('areaType' in value) || value['areaType'] === undefined) return false;
    return true;
}

export function AreaWithRelationsFromJSON(json: any): AreaWithRelations {
    return AreaWithRelationsFromJSONTyped(json, false);
}

export function AreaWithRelationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AreaWithRelations {
    if (json == null) {
        return json;
    }
    return {

        'code': json['code'],
        'name': json['name'],
        'areaType': json['areaType'],
        'parents': json['parents'] == null ? undefined : ((json['parents'] as Array<any>).map(AreaFromJSON)),
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(AreaFromJSON)),
        'siblings': json['siblings'] == null ? undefined : ((json['siblings'] as Array<any>).map(AreaFromJSON)),
    };
}

export function AreaWithRelationsToJSON(json: any): AreaWithRelations {
    return AreaWithRelationsToJSONTyped(json, false);
}

export function AreaWithRelationsToJSONTyped(value?: AreaWithRelations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'code': value['code'],
        'name': value['name'],
        'areaType': value['areaType'],
        'parents': value['parents'] == null ? undefined : ((value['parents'] as Array<any>).map(AreaToJSON)),
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(AreaToJSON)),
        'siblings': value['siblings'] == null ? undefined : ((value['siblings'] as Array<any>).map(AreaToJSON)),
    };
}

